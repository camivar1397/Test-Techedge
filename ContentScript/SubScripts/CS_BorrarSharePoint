/*
████████╗███████╗ ██████╗██╗  ██╗███████╗██████╗  ██████╗ ███████╗    ████████╗███████╗ █████╗ ███╗   ███╗
╚══██╔══╝██╔════╝██╔════╝██║  ██║██╔════╝██╔══██╗██╔════╝ ██╔════╝    ╚══██╔══╝██╔════╝██╔══██╗████╗ ████║
   ██║   █████╗  ██║     ███████║█████╗  ██║  ██║██║  ███╗█████╗         ██║   █████╗  ███████║██╔████╔██║
   ██║   ██╔══╝  ██║     ██╔══██║██╔══╝  ██║  ██║██║   ██║██╔══╝         ██║   ██╔══╝  ██╔══██║██║╚██╔╝██║
   ██║   ███████╗╚██████╗██║  ██║███████╗██████╔╝╚██████╔╝███████╗       ██║   ███████╗██║  ██║██║ ╚═╝ ██║
   ╚═╝   ╚══════╝ ╚═════╝╚═╝  ╚═╝╚══════╝╚═════╝  ╚═════╝ ╚══════╝       ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝     ╚═╝
                                            ╦╔╗╔╔═╗╔═╗╦╦═╗╦╔╗╔╔═╗  ╔╦╗╦═╗╦ ╦╔═╗╔╦╗  ╔═╗╦  ╔═╗╔╗ ╔═╗╦  ╦ ╦ ╦
                                            ║║║║╚═╗╠═╝║╠╦╝║║║║║ ╦   ║ ╠╦╝║ ║╚═╗ ║   ║ ╦║  ║ ║╠╩╗╠═╣║  ║ ╚╦╝
                                            ╩╝╚╝╚═╝╩  ╩╩╚═╩╝╚╝╚═╝   ╩ ╩╚═╚═╝╚═╝ ╩   ╚═╝╩═╝╚═╝╚═╝╩ ╩╩═╝╩═╝╩ 
*/
/***** CS para borrar la carpeta radicado en SharePoint - DGC 22/04/2020 BEGIN *****/

//variables con los parametros de entrada
def radicado = args[0]

//variables con parametros de salida
def result = [:]

//Declaracion constantes
app = csvars.app
CONF = sql.runSQLFast(app.querys.conf, false, false, 0).rows.collectEntries{[(it.Sigla):it.DescripcionLarga]}

/***************************************Registro EndPoints BEGIN***************************************/

//Servicio para la obtención del token
def tokenclient = csws.registerRESTClient("token", CONF.get('TokenURL').replace("@TenantId@","${CONF.get('TenantID')}"))
tokenclient.setDefaultContentTypeHeader("application/x-www-form-urlencoded")

//EndPoint principal Microsoft Graph
def msgraphclient = csws.registerRESTClient("msgraph", "https://graph.microsoft.com/v1.0/")
msgraphclient.defaultAcceptHeader = "application/json"

/***************************************Registro EndPoints END***************************************/

/***************************************Main Code BEGIN***************************************/
try{
    //Obtener token
    def token = getToken()
    
    if(token){
        //Obtener hijos del FolderID
        def child = getChild(token,radicado)
        
        //Validar respuesta
        if(child){
            //Evaluar que es un folder
            if(child.folder){
                def delete = deleteFolder(token,child)
                
                if(delete){
                    result.msgdesc = "Proceso completo"
                    result.msgcode = true 
                    return result
                }else{
                     result.msgdesc = "Error al borrar el folder radicado"
                     result.msgcode = false 
                     return result
                }
            }else{
                result.msgdesc = "No se encontro objeto folder"
                result.msgcode = false 
                return result
            }
        }else{
            result.msgdesc = "No se encontro hijo"
            result.msgcode = false 
            return result
        }
    }else{
        result.msgdesc = "Error en la obtencion del token"
        result.msgcode = false 
        return result
    }
}catch(e){
    log.error("Error en la eliminacion del folder", e)
    result.msgdesc = "Error general + ${e}"
    result.msgcode = false 
    return result
}
/***************************************Main Code END***************************************/

/*************************************Funciones BEGIN*************************************/

//Funcion para obtener token
def getToken(){ 
    try{
        def response = csws.getRegisteredRESTClient("token").post(){
            urlenc client_id:"${CONF.get('ClientID')}",scope:"https://graph.microsoft.com/.default",client_secret:"${CONF.get('ClientSecret')}",grant_type:'client_credentials'
        }
    
        if(response.getStatusCode() == 200){
            return getJson(response.getContentAsString()).access_token
        }else{
            return null
        }
    }catch(e){
        return null
    }
}

//Funcion para obtener child con el radicado
def getChild(token,radicado){ 
    try{
        def response = csws.getRegisteredRESTClient("msgraph").get(path:"/sites/${CONF.get('SiteID')}/drive/items/${CONF.get('FolderID')}/children/${radicado}", 
                                                                   headers:["Authorization":"Bearer ${token}",
                                                                            "Prefer":"apiversion=2.1"])
        if(response.getStatusCode() == 200){
            return getJson(response.getContentAsString())
        }else{
            return null
        }
    }catch(e){
        return null
    }
}

//Funcion para borrar el Folder
def deleteFolder(token,child){
    try{
        def response = csws.getRegisteredRESTClient("msgraph").delete(path:"/sites/${CONF.get('SiteID')}/drive/items/${child.id}", 
                                                                      headers:["Authorization":"Bearer ${token}"])
        
        if(response.getStatusCode() == 204){
            return true
        }else{
            return false
        }
    }catch(e){
        return false
    }
}
/*************************************Funciones END*************************************/

/*************************************Utils BEGIN*************************************/

def getJson(text){
    def jsonSlurper = new JsonSlurper()
    def JSON = jsonSlurper.parseText(text)
    return JSON
}
/*************************************Utils END*************************************/

/***** CS para borrar la carpeta radicado en SharePoint - DGC 22/04/2020 END *****/