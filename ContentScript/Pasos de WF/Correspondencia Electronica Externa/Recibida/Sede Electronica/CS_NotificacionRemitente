/*
████████╗███████╗ ██████╗██╗  ██╗███████╗██████╗  ██████╗ ███████╗    ████████╗███████╗ █████╗ ███╗   ███╗
╚══██╔══╝██╔════╝██╔════╝██║  ██║██╔════╝██╔══██╗██╔════╝ ██╔════╝    ╚══██╔══╝██╔════╝██╔══██╗████╗ ████║
   ██║   █████╗  ██║     ███████║█████╗  ██║  ██║██║  ███╗█████╗         ██║   █████╗  ███████║██╔████╔██║
   ██║   ██╔══╝  ██║     ██╔══██║██╔══╝  ██║  ██║██║   ██║██╔══╝         ██║   ██╔══╝  ██╔══██║██║╚██╔╝██║
   ██║   ███████╗╚██████╗██║  ██║███████╗██████╔╝╚██████╔╝███████╗       ██║   ███████╗██║  ██║██║ ╚═╝ ██║
   ╚═╝   ╚══════╝ ╚═════╝╚═╝  ╚═╝╚══════╝╚═════╝  ╚═════╝ ╚══════╝       ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝     ╚═╝
                                            ╦╔╗╔╔═╗╔═╗╦╦═╗╦╔╗╔╔═╗  ╔╦╗╦═╗╦ ╦╔═╗╔╦╗  ╔═╗╦  ╔═╗╔╗ ╔═╗╦  ╦ ╦ ╦
                                            ║║║║╚═╗╠═╝║╠╦╝║║║║║ ╦   ║ ╠╦╝║ ║╚═╗ ║   ║ ╦║  ║ ║╠╩╗╠═╣║  ║ ╚╦╝
                                            ╩╝╚╝╚═╝╩  ╩╩╚═╩╝╚╝╚═╝   ╩ ╩╚═╚═╝╚═╝ ╩   ╚═╝╩═╝╚═╝╚═╝╩ ╩╩═╝╩═╝╩ 
*/
/***** CS para enviar notificación del remitente de la radicación electrónica - LPA 03/04/2020 BEGIN *****/

//**** Declaracion de constantes
APC = docman.getScriptByNickname("am_correspondencia_config").getCSVars()?.app
WFSTATUS = workflow.getWorkflowStatus(workID, subWorkID)
WFATTACHMENT = WFSTATUS.getAttachmentsFolder()
FORM = forms.getWorkFlowFormDirect(WFSTATUS, "Form")

//**** Declaracion de variables
class EmailProperties{
    String email
    String cuerpo
    String info
    String titulo
    String asunto
    }
def newCorreo = new EmailProperties()

//cuerpo correo
newCorreo.email= "<tr>"
newCorreo.email+="<td align='justify'>${FORM.asunto.value}</td>"
newCorreo.email+="<td align='center'>${FORM.radicado.value}</td>"
newCorreo.email+="<td align='center'>${FORM.fecharadicado.valueAsDate.format('dd/MM/yyyy hh:mm:ss a')}</td>"
def tipoCom = runCS("${APC.subScripts.siglatovalue}", "Parametros", "${FORM.tipocomunicacion.value}", null, null, "TIPC" ).result
newCorreo.email+="<td align='center'>${tipoCom ? tipoCom : ""}</td>"
newCorreo.email+="<td align='center'>${FORM.deusuario.value}</td>"
newCorreo.email+="<td align='center'>${FORM.nanexos.value}</td>"
newCorreo.email+="</tr>"
newCorreo.email+="<br>"
String informacion = runCS("${APC.subScripts.siglatovalue}", "Parametros", "CINF", null, null, "SEDE").result
newCorreo.info = informacion.replace("@linksede@","<a href='${runCS("${APC.subScripts.siglatovalue}", "Parametros", "URL", null, null, "SEDE").result}'>aquí</a>")

//Obtener los parametros y remplazar los comodines
String cuerpoCorreo =runCS("${APC.subScripts.siglatovalue}", "Parametros", "CBDY", null, null, "SEDE").result
newCorreo.cuerpo = cuerpoCorreo.replace("@radicado@", "${FORM.radicado.value}").replace("@fecharadicado@","${FORM.fecharadicado.valueAsDate.format('dd/MM/yyyy hh:mm:ss a')}").replace("@asunto@","${FORM.asunto.value}")

//Asunto y Cuerpo del correo
templateEmail = docman.getNode(APC.constants.correoSedeRemitente)
newCorreo.titulo = "Radicación Externa No. ${FORM.radicado.value}"
newCorreo.asunto = "Ha realizado con éxito la radicación de la comunicación No. ${FORM.radicado.value}"

//Cargar Radicado electrónico
def RadicElect = docman.getNodeByName(WFATTACHMENT, "${FORM.radicado.value}.pdf")

/******************************************Main Code BEGIN******************************************/
try{

    //Enviar el correo de notificación
    enviarCorreo(newCorreo, templateEmail, RadicElect)
    
    //Actualizar estado en tabla Sede Electronica
    actualizarEstado()
    
}catch(e){
    log.error("Error en el envio de la notificacion", e)
}
/******************************************Main Code END******************************************/

/*****************************************Functions BEGIN*****************************************/

def enviarCorreo(cuerpoCorreo, templateEmail, radicElect){
    //Evaluar template
    def emailContext = ['asunto':"<h1>${cuerpoCorreo.titulo}</h1>", 'body': cuerpoCorreo.email, 'cuerpo':cuerpoCorreo.cuerpo, 'informacion':cuerpoCorreo.info]
    def mailbody = template.evaluateTemplate(templateEmail, emailContext)
    correo = mail.create(mailbody)

    //Remitentes de correo
    correo.to("${FORM.decorreo.value}")

    //Adjuntos en el correo
    correo.attach(radicElect, "${radicElect.name}")

    //Enviar Correo
    correo.from("correspondenciatechedgecol@gmail.com")
    correo.subject(cuerpoCorreo.asunto)
    mail.send(correo, "correspondencia")
}

//Actualizar estado en tabla Sede Electronica
def actualizarEstado(){
    
    def sp = """EXECUTE Z_SP_COR_ActualizacionFormularioExterno 
                @WorkID = ${WFSTATUS.workflowID},
                @ID = ${FORM.id.value},
                @Radicado = '${FORM.radicado.value}',
                @FechaRadicado = ${FORM.fecharadicado.valueAsDate},
                @MotivoRechazo = NULL,
                @ObservacionesRechazo = NULL,
                @Estado = 'Radicado'
             """
    
    def conn = jdbc.conn("otsc")
    conn.execute(sp)
    conn.close()
}
/*****************************************Functions END*****************************************/

/***** CS para enviar notificación del remitente de la radicación electrónica - LPA 03/04/2020 END *****/




